kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: {{ template "fullname" . }}-promexp
  labels:
    app: {{ template "fullname" . }}-promexp
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  revisionHistoryLimit: 5
  strategy:
   type: Recreate
  selector:
   matchLabels:
    name: {{ template "fullname" . }}-promexp
  template:
   metadata:
    labels:
     name: {{ template "fullname" . }}-promexp
    annotations:
      chart-version: {{ .Chart.Version }}
      prometheus.io/scrape: "true"
      prometheus.io/port: {{ required ".Values.port_metrics_promexp missing" .Values.port_metrics_promexp | quote }}
      prometheus.io/targets: {{ required ".Values.alerts.prometheus missing" .Values.alerts.prometheus | quote }}

   spec:
    containers:
      - name: promexp-metrics
        image: "{{ .Values.image_promexp }}:{{ .Values.imageTag_promexp }}"
        imagePullPolicy: {{ default "IfNotPresent" .Values.imagePullPolicy | quote }}
        args:
          - "--collect.binlog_size"
          - "--collect.info_schema.processlist"
        livenessProbe:
          httpGet:
            path: /
            port: 9104
            scheme: HTTP
          periodSeconds: 20
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 9104
            scheme: HTTP
          periodSeconds: 20
          timeoutSeconds: 10
        env:
          - name: DATA_SOURCE_NAME
            value: "{{ required ".Values.db_user missing" .Values.db_user }}:{{ required ".Values.db_password missing" .Values.db_password }}@tcp({{ include (print .Release.Name "_db_host") . }}:3306)/"
        ports:
          - name: metrics
            containerPort: {{ required ".Values.port_metrics_promexp missing" .Values.port_metrics_promexp }}
        resources:
          limits:
            cpu: 250m
            memory: 256Mi
          requests:
            cpu: 5m
            memory: 32Mi
