{{- $opts := merge .Values.pgbouncer .Values.global.pgbouncer }}
{{- if $opts.enabled }}
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: {{.Values.postgresDatabase}}-pgbouncer
  namespace:  {{.Release.Namespace}}
  labels:
    system: openstack
    component: {{.Values.postgresDatabase}}
spec:
  replicas: {{ .Values.pod.replicas.pgbouncer }}
  revisionHistoryLimit: {{ .Values.pod.lifecycle.upgrades.deployments.revision_history }}
  strategy:
    type: {{ .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy }}
    {{- if eq .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_unavailable }}
      maxSurge: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_surge }}
    {{- end }}
  selector:
   matchLabels:
    name: {{.Values.postgresDatabase}}-pgbouncer
  template:
    metadata:
      labels:
        name: {{.Values.postgresDatabase}}-pgbouncer
{{ tuple . .Values.postgresDatabase "pgbouncer" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
        {{- if $opts.prometheus }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "9200"
        {{- end }}
    spec:
{{ tuple . .Values.postgresDatabase "pgbouncer" | include "kubernetes_pod_anti_affinity" | indent 6 }}
      terminationGracePeriodSeconds: 150
      containers:
        - name: pgbouncer
          image: {{.Values.global.imageRegistry}}/{{.Values.global.imageNamespace}}/pgbouncer-k8s:{{.Values.global.pgbouncer.imageTag | default .Values.pgbouncer.image_version | default .Values.global.pgbouncer.imageTag | default .Values.global.pgbouncer.image_version | default "latest" }}
          imagePullPolicy: IfNotPresent
{{- if $opts.debug }}
          command: ["sleep", "inf"]
{{- end }}
          env:
            - name: LABEL_SELECTOR
              value: "app={{.Values.postgresDatabase}}-postgresql"
            - name: LISTEN_PORT
              value: {{ $opts.config.listen_port | quote }}
            - name: LISTEN_BACKLOG
              value: {{ $opts.config.listen_backlog | quote }}
            - name: MAX_CLIENT_CONN
              value: {{ $opts.config.max_client_conn | quote }}
            - name: MIN_POOL_SIZE
              value: {{ $opts.config.min_pool_size | quote }}
            - name: DEFAULT_POOL_SIZE
              value: {{ $opts.config.default_pool_size | quote }}
            - name: RESERVE_POOL_SIZE
              value: {{ $opts.config.reserve_pool_size | quote }}
            - name: STATS_PASS
              value: {{ $opts.config.stats_pass | default (derivePassword 1 "long" "password" "stats_user" (print .Values.postgresDatabase "-postgresql." .Release.Namespace ".svc.kubernetes." .Values.global.region "." .Values.global.tld)) | quote }}
            - name: LOGLEVEL
              value: {{ .Values.global.pgbouncer.logLevel | default "INFO" }}
{{- if not $opts.debug }}
  {{- if semverCompare ">=20190123.2" (default .Values.pgbouncer.image_version .Values.global.pgbouncer.imageTag | default .Values.global.pgbouncer.imageTag | default .Values.global.pgbouncer.image_version ) }}
          livenessProbe:
            exec:
              command:
              - bash
              - -c
              - "[ -f /tmp/pgbouncer-alive ] && [ $(($(date +%s) - $(date -r /tmp/pgbouncer-alive +%s))) -lt 5 ]"
            initialDelaySeconds: 3
            periodSeconds: 1
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - "[ -f /tmp/pgbouncer-ready ] && [ $(($(date +%s) - $(date -r /tmp/pgbouncer-ready +%s))) -lt 5 ]"
            initialDelaySeconds: 3
            periodSeconds: 1
            failureThreshold: 5
  {{- else }}
          livenessProbe:
            exec:
              command:
              - pgbouncer-k8s-liveness
            initialDelaySeconds: 3
            periodSeconds: 1
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
              - pgbouncer-k8s-readiness
            initialDelaySeconds: 3
            periodSeconds: 1
            failureThreshold: 5
  {{- end }}
{{- end }}
          ports:
            - name: pgbouncer
              containerPort: {{ $opts.config.listen_port }}
            {{- if $opts.prometheus }}
            - name: metrics
              containerPort: 9200
            {{- end }}
{{- end }}
