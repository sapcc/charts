apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "andromeda.fullname" . }}-server
  labels:
{{ include "andromeda.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "andromeda.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "andromeda.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "andromeda.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-migration
          image: "quay.io/stackanetes/kubernetes-entrypoint:v0.3.1"
          env:
            - name: NAMESPACE
              value: "andromeda"
            - name: DEPENDENCY_JOBS
              value: {{ include "andromeda.fullname" . }}-migration
            - name: COMMAND
              value: "true"
      containers:
        - name: {{ .Chart.Name }}-server
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.andromeda.image_tag }}"
          args: ["--config-file", "/etc/andromeda/andromeda.conf", "server", "--port", "8000"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: HOST
              value: 0.0.0.0
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: http
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: etc-andromeda
              mountPath: /etc/andromeda
              readOnly: true
      volumes:
        - name: etc-andromeda
          projected:
            defaultMode: 420
            sources:
              - configMap:
                  name: andromeda-etc
                  items:
                    - key: andromeda.conf
                      path: andromeda.conf
