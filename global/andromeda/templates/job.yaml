apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "andromeda.fullname" . }}-migration
  labels:
    helm.sh/chart: {{ template "cockroachdb.chart" . }}
    app.kubernetes.io/name: {{ template "cockroachdb.name" . }}-migration
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
  {{- with .Values.labels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    spec:
      restartPolicy: OnFailure
      serviceAccountName: {{ template "andromeda.serviceAccountName" . }}
      initContainers:
        - name: wait-for-db
          image: "quay.io/stackanetes/kubernetes-entrypoint:v0.3.1"
          env:
            - name: NAMESPACE
              value: "andromeda"
            - name: DEPENDENCY_SERVICE
              value: "andromeda-cockroachdb"
            - name: COMMAND
              value: "true"
        - name: create-database
          image: "cockroachdb/cockroach:v20.2.3"
          command:
          - /cockroach/cockroach
          - sql
          - --insecure
          - --host
          - {{ include "andromeda.name" . }}-cockroachdb
          - --execute
          - CREATE DATABASE IF NOT EXISTS {{ include "andromeda.name" . }};
      containers:
        - name: {{ include "andromeda.fullname" . }}-migration
          image: "{{ .Values.image.repository }}:{{ .Values.andromeda.image_tag }}"
          args: ["--config-file", "/etc/andromeda/andromeda.conf", "migrate"]
          volumeMounts:
            - name: etc-andromeda
              mountPath: /etc/andromeda
              readOnly: true
      volumes:
        - name: etc-andromeda
          projected:
            defaultMode: 420
            sources:
              - configMap:
                  name: andromeda-etc
                  items:
                    - key: andromeda.conf
                      path: andromeda.conf
