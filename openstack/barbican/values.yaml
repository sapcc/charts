# Default values for barbican.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value
#
#
global:
  imageNamespace: monsoon
  imageRegistry: DEFINED-IN-REGION-CHART
  dbUser: barbican
  dbPassword: null
  pgbouncer:
    enabled: true

pod:
  replicas:
    api: 2
  lifecycle:
    upgrades:
      deployments:
        revision_history: 5
        pod_replacement_strategy: RollingUpdate
        rolling_update:
           max_unavailable: 0
           max_surge: 1

api_port_internal: '9311'
image_version: newton-20180327.1
debug: "True"

postgresql:
  imageTag: '9.4.14'
  postgresDatabase: barbican
  postgresPassword: null
  dbInit: barbican-db-init
  dbMaintain: barbican-db-maintain
  pgbouncer:
    enabled: true
  persistence:
    enabled: true
    existingClaim: db-barbican-pvclaim
  backup:
    enabled: true
    metrics: true
    imageTag: v0.5.12
    os_password: null

pgmetrics:
  customMetrics:
    openstack_barbican_secrets:
      query: "select secrets.id, secrets.status, secrets.name, projects.external_id AS project_id, secrets.secret_type from secrets INNER JOIN projects on secrets.project_id=projects.id where secrets.deleted='false'"
      metrics:
        - id:
            usage: "LABEL"
            description: "Secret ID"
        - status:
            usage: "LABEL"
            description: "Secret state"
        - name:
            usage: "LABEL"
            description: "Secret name"
        - project_id:
            usage: "LABEL"
            description: "Project ID of the secret"
        - secret_type:
            usage: "LABEL"
            description: "Type of secret"


rabbitmq:
  users:
    default:
      password: null
    admin:
      password: null
  persistence:
    enabled: false
  metrics:
    password: null

logging:
    formatters:
        context:
            class: oslo_log.formatters.ContextFormatter
        default:
            format: "%(message)s"
    handlers:
        stdout:
            class: StreamHandler
            args: "(sys.stdout,)"
            formatter: context
        "null":
            class: logging.NullHandler
            formatter: default
            args: "()"
        sentry:
            class: raven.handlers.logging.SentryHandler
            level: ERROR
            args: "()"
    loggers:
        root:
            handlers: stdout, sentry
            level: WARNING
        barbican:
            handlers: stdout, sentry
            level: INFO
        eventlet.wsgi.server:
            handlers: stdout, sentry
            level: INFO
        sqlalchemy.engine.base.Engine:
            handlers: stdout, sentry
            level: WARNING

sentry:
  enabled: true
vice_president: true
