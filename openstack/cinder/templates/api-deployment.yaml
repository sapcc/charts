kind: Deployment
apiVersion: extensions/v1beta1

metadata:
  name: cinder-api
  labels:
    system: openstack
    type: api
    component: cinder
spec:
  replicas: {{ .Values.pod.replicas.api }}
  revisionHistoryLimit: {{ .Values.pod.lifecycle.upgrades.deployments.revisionHistory }}
  strategy:
    type: {{ .Values.pod.lifecycle.upgrades.deployments.podReplacementStrategy }}
    {{ if eq .Values.pod.lifecycle.upgrades.deployments.podReplacementStrategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.pod.lifecycle.upgrades.deployments.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.pod.lifecycle.upgrades.deployments.rollingUpdate.maxSurge }}
    {{ end }}
  selector:
    matchLabels:
      name: cinder-api
  template:
    metadata:
      labels:
        name: cinder-api
{{ tuple . "cinder" "api" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
        configmap-etc-hash: {{ include (print $.Template.BasePath "/etc-configmap.yaml") . | sha256sum }}
{{- if and (eq .Capabilities.KubeVersion.Major "1") (lt .Capabilities.KubeVersion.Minor "5") }}
        scheduler.alpha.kubernetes.io/affinity: >
            {{ tuple . "cinder" "api" | include "kubernetes_pod_anti_affinity" }}
{{- end }}
    spec:
{{- if and (eq .Capabilities.KubeVersion.Major "1") (ge .Capabilities.KubeVersion.Minor "7") }}
{{ tuple . "cinder" "api" | include "kubernetes_pod_anti_affinity" | indent 6 }}
{{- end }}
      containers:
        - name: cinder-api
          image: {{.Values.global.imageRegistry}}/{{.Values.global.image_namespace}}/ubuntu-source-cinder-api:{{.Values.imageVersionCinderApi | default .Values.imageVersion | required "Please set cinder.imageVersion or similar" }}
          imagePullPolicy: IfNotPresent
          command:
            - kubernetes-entrypoint
          env:
            - name: COMMAND
              value: "cinder-api"
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: DEPENDENCY_JOBS
              value: "cinder-migration"
            - name: DEPENDENCY_SERVICE
              value: "cinder-postgresql,{{ .Release.Name }}-rabbitmq"
            - name: STATSD_HOST
              value: "localhost"
            - name: STATSD_PORT
              value: "9125"
            {{- if .Values.sentry.enabled }}
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: {{ .Chart.Name }}.DSN.python
            {{- end }}
            - name: PGAPPNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          livenessProbe:
            httpGet:
              path: /
              port: cinder-api
            initialDelaySeconds: 15
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: cinder-api
            initialDelaySeconds: 15
            timeoutSeconds: 5
          resources:
            requests:
              cpu: "1500m"
              memory: "5Gi"
          ports:
            - name: cinder-api
              containerPort: {{.Values.cinderApiPortInternal }}
          volumeMounts:
            - name: etccinder
              mountPath: /etc/cinder
            - name: cinder-etc
              mountPath: /etc/cinder/cinder.conf
              subPath: cinder.conf
              readOnly: true
            - name: cinder-etc
              mountPath: /etc/cinder/api-paste.ini
              subPath: api-paste.ini
              readOnly: true
            - name: cinder-etc
              mountPath: /etc/cinder/policy.json
              subPath: policy.json
              readOnly: true
            - name: cinder-etc
              mountPath: /etc/cinder/logging.ini
              subPath: logging.ini
              readOnly: true
            - name: cinder-etc
              mountPath: /etc/cinder/cinder_audit_map.yaml
              subPath: cinder_audit_map.yaml
              readOnly: true
            {{- if .Values.watcher.enabled }}
            - name: cinder-etc
              mountPath: /etc/cinder/watcher.yaml
              subPath: watcher.yaml
              readOnly: true
            {{- end }}
        - name: statsd
          image: prom/statsd-exporter:v0.8.1
          imagePullPolicy: IfNotPresent
          args: [ --statsd.mapping-config=/etc/statsd/statsd-exporter.yaml ]
          ports:
            - name: statsd
              containerPort: 9125
              protocol: UDP
            - name: metrics
              containerPort: {{ .Values.port_metrics }}
          volumeMounts:
            - name: cinder-etc
              mountPath: /etc/statsd/statsd-exporter.yaml
              subPath: statsd-exporter.yaml
              readOnly: true
      volumes:
        - name: etccinder
          emptyDir: {}
        - name: cinder-etc
          configMap:
            name: cinder-etc
