kind: Deployment
apiVersion: apps/v1

metadata:
  name: cinder-api
  labels:
    system: openstack
    type: api
    component: cinder
spec:
  replicas: {{ .Values.pod.replicas.api }}
  revisionHistoryLimit: {{ .Values.pod.lifecycle.upgrades.deployments.revisionHistory }}
  strategy:
    type: {{ .Values.pod.lifecycle.upgrades.deployments.podReplacementStrategy }}
    {{ if eq .Values.pod.lifecycle.upgrades.deployments.podReplacementStrategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.pod.lifecycle.upgrades.deployments.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.pod.lifecycle.upgrades.deployments.rollingUpdate.maxSurge }}
    {{ end }}
  selector:
    matchLabels:
      name: cinder-api
  template:
    metadata:
      labels:
        name: cinder-api
{{ tuple . "cinder" "api" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
        configmap-etc-hash: {{ include (print $.Template.BasePath "/etc-configmap.yaml") . | sha256sum }}
    spec:
{{ tuple . "cinder" "api" | include "kubernetes_pod_anti_affinity" | indent 6 }}
      containers:
        - name: cinder-api
          image: {{required ".Values.global.registry is missing" .Values.global.registry}}/loci-cinder:{{.Values.imageVersionCinderApi | default .Values.imageVersion | required "Please set cinder.imageVersion or similar" }}
          imagePullPolicy: IfNotPresent
          command:
            - kubernetes-entrypoint
          env:
            - name: COMMAND
              value: "{{ if .Values.api.use_uwsgi }}uwsgi --ini /etc/cinder/api_uwsgi.ini{{ else }}cinder-api{{ end }}"
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: DEPENDENCY_JOBS
              value: "{{ .Release.Name }}-migration"
            - name: DEPENDENCY_SERVICE
{{- if eq .Values.mariadb.enabled true }}
              value: "{{ .Release.Name }}-mariadb,{{ .Release.Name }}-rabbitmq"
{{- else }}
              value: "{{ .Release.Name }}-postgresql,{{ .Release.Name }}-rabbitmq"
{{- end }}
            - name: STATSD_HOST
              value: "localhost"
            - name: STATSD_PORT
              value: "9125"
            {{- if .Values.sentry.enabled }}
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: {{ .Chart.Name }}.DSN.python
            {{- end }}
            - name: PGAPPNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          livenessProbe:
            httpGet:
              path: /
              port: cinder-api
            initialDelaySeconds: 15
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: cinder-api
            initialDelaySeconds: 15
            timeoutSeconds: 5
          {{- if .Values.pod.resources.api }}
          resources:
{{ toYaml .Values.pod.resources.api | indent 12 }}
          {{- end }}
          ports:
            - name: cinder-api
              containerPort: {{.Values.cinderApiPortInternal }}
          volumeMounts:
            - name: cinder-etc
              mountPath: /etc/cinder
        - name: statsd
          image: prom/statsd-exporter:v0.8.1
          imagePullPolicy: IfNotPresent
          args: [ --statsd.mapping-config=/etc/statsd/statsd-exporter.yaml ]
          ports:
            - name: statsd
              containerPort: 9125
              protocol: UDP
            - name: metrics
              containerPort: {{ .Values.port_metrics }}
          volumeMounts:
            - name: statsd
              mountPath: /etc/statsd
 {{- include "jaeger_agent_sidecar" . | indent 8 }}
      volumes:
        - name: cinder-etc
          projected:
            defaultMode: 420
            sources:
              - configMap:
                  items:
                  - key: ciner.conf
                    path: cinder.conf
                  - key: api-paste.ini
                    path: api-paste.ini
                {{- if .Values.api.use_uwsgi }}
                  - key: api_uwsgi.ini
                    path: api_uwsgi.ini
                {{- end }}
                  - key: policy.json
                    path: policy.json
                  - key: logging.ini
                    path: logging.ini
                  - key: cinder_audit_map.yaml
                    path: cinder_audit_map.yaml
                  - key: resource_filters.json
                    path: resource_filters.json
                {{- if .Values.watcher.enabled}}
                  - key: watcher.yaml
                    path: watcher.yaml
                {{- end }}
                  name: cinder-etc
        - name: statsd
          projected:
            defaultMode: 420
            sources:
              - configMap:
                  items:
                  - key: statsd-exporter.yaml
                    path: statsd-exporter.yaml
                  name: cinder-etc
