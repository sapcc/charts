{{- if .Values.cronus.enabled }}
apiVersion: apps/v1
{{- if .Values.cronus.statefulSet.enabled }}
kind: StatefulSet
{{- else }}
kind: Deployment
{{- end }}
metadata:
  name: usage
  {{- if .Values.cronus.annotations }}
  annotations:
    {{ toYaml .Values.cronus.annotations | indent 4 }}
  {{- end  }}
  {{- if .Values.cronus.labels }}
  labels:
    {{ toYaml .Values.cronus.labels | indent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.cronus.usage.replicas }}
  {{- if .Values.cronus.statefulSet.enabled }}
  podManagementPolicy: {{ .Values.cronus.statefulSet.podManagementPolicy }}
  serviceName: usage
  updateStrategy:
  {{- else }}
  strategy:
  {{- end }}
    type: {{ .Values.cronus.updateStrategy }}
{{- if eq "RollingUpdate" .Values.cronus.updateStrategy }}
{{- if not .Values.cronus.statefulSet.enabled }}
    rollingUpdate:
      maxSurge: {{ .Values.cronus.usage.maxSurge }}
      maxUnavailable: {{ .Values.cronus.usage.maxUnavailable }}
{{- end }}
{{- end }}
  selector:
    matchLabels:
      name: usage
      instance: cronus
  template:
    metadata:
      annotations:
        checksum/config: {{ include "cronus/templates/cronus/_config.yaml.tpl" . | sha256sum }}
      labels:
        name: usage
        instance: cronus
    spec:
      serviceAccountName: cronus
{{- if .Values.cronus.affinity }}
      affinity: {{ toYaml .Values.cronus.affinity | nindent 8 }}
{{- end }}
      containers:
        - name: usage
          image: "{{ .Values.cronus.image.name }}:{{ .Values.cronus.image.tag }}"
          imagePullPolicy: {{ .Values.cronus.image.pullPolicy }}
          args:
            - "-config=/cronus/config.yaml"
          volumeMounts:
            - name: cronus
              mountPath: "/cronus/config.yaml"
              subPath: config.yaml
          ports:
            - name: http
              containerPort: {{ .Values.cronus.http }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 3
      volumes:
        - name: cronus
          secret:
            secretName: cronus
{{ end -}}
