{{- if .Values.worker_enabled }}
kind: Deployment
apiVersion: extensions/v1beta1

metadata:
  name: designate-producer
  labels:
    system: openstack
    type: backend
    component: designate
spec:
  replicas: {{ .Values.pod.replicas.producer }}
  revisionHistoryLimit: {{ .Values.pod.lifecycle.upgrades.deployments.revision_history }}
  strategy:
    type: {{ .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy }}
    {{ if eq .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_unavailable }}
      maxSurge: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_surge }}
    {{ end }}
  selector:
    matchLabels:
      app: designate-producer
  template:
    metadata:
      labels:
        app: designate-producer
      annotations:
        configmap-etc-hash: {{ include (print $.Template.BasePath "/etc-configmap.yaml") . | sha256sum }}
        configmap-bin-hash: {{ include (print $.Template.BasePath "/bin-configmap.yaml") . | sha256sum }}
    spec:
      containers:
        - name: designate-producer
          image: {{required ".Values.global.image_repository is missing" .Values.global.image_repository}}/{{.Values.global.image_namespace}}/loci-designate:{{required ".Values.global.image_version_designate_producer is missing" .Values.image_version_designate_producer}}
          imagePullPolicy: IfNotPresent
          command:
            - /usr/local/bin/kubernetes-entrypoint
          resources:
             requests:
               memory: "128Mi"
               cpu: "100m"
             limits:
               memory: "512Mi"
               cpu: "500m"
          env:
            - name: COMMAND
              value: "/container.init/designate-producer-start"
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: DEPENDENCY_SERVICE
              value: "designate-mariadb,{{ .Release.Name }}-rabbitmq"
            - name: DEBUG_CONTAINER
              value: "false"
            {{- if .Values.sentry.enabled }}
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: designate.DSN.python
            {{- end }}
          volumeMounts:
            - mountPath: /designate-etc
              name: designate-etc
            - mountPath: /container.init
              name: container-init
      volumes:
        - name: designate-etc
          configMap:
            name: designate-etc
        - name: container-init
          configMap:
            name: designate-bin
            defaultMode: 0755
{{- end }}
