kind: Deployment
apiVersion: extensions/v1beta1

metadata:
  name: glance
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    type: api
    component: glance
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: {{ .Values.upgrades.revisionHistory }}
  strategy:
    type: {{ .Values.upgrades.podReplacementStrategy }}
    {{ if eq .Values.upgrades.podReplacementStrategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.upgrades.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.upgrades.rollingUpdate.maxSurge }}
    {{ end }}
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        name: glance
      annotations:
        chart-version: {{.Chart.Version}}
        checksum/etc-configmap.conf: {{ include (print $.Template.BasePath "/etc-configmap.yaml") . | sha256sum }}
        checksum/bin-configmap.conf: {{ include (print $.Template.BasePath "/bin-configmap.yaml") . | sha256sum }}
    spec:
      containers:
        - name: api
          image: "{{ default "hub.global.cloud.sap" .Values.global.imageRegistry }}/{{ .Values.api.image }}:{{ .Values.api.imageTag }}"
          imagePullPolicy: {{ .Values.api.imagePullPolicy | default "IfNotPresent" | quote }}
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 9292
            initialDelaySeconds: 15
            timeoutSeconds: 5
          command:
            - /usr/local/bin/kubernetes-entrypoint
          env:
            - name: COMMAND
              value: "bash /scripts/glance-api-start"
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: DEPENDENCY_JOBS
              value: "glance-migration-job"
            - name: DEPENDENCY_SERVICE
              value: {{ .Release.Name }}-postgresql,{{ .Release.Name }}-memcached              
            - name: DEBUG_CONTAINER
              value: "false"
            {{- if .Values.sentry.enabled }}
            - name: SENTRY_DSN
              value: {{ .Values.sentry.dsn | quote}}
            {{- end }}
            {{- if .Values.metrics.enabled }}
            - name: STATSD_HOST
              value: "127.0.0.1"
            - name: STATSD_PORT
              value: "9125"
            - name: STATSD_PREFIX
              value: {{ .Values.metrics.prefix | default "openstack" | quote }}
            {{- end }}
          {{- if .Values.api.resources.enabled }}
          resources:
            limits:
              cpu: {{ .Values.api.resources.limits.cpu | quote }}
              memory: {{ .Values.api.resources.limits.memory | quote }}
            requests:
              cpu: {{ .Values.api.resources.requests.cpu | quote }}
              memory: {{ .Values.api.resources.requests.memory | quote }}
          {{- end }}
          ports:
            - name: api
              containerPort: 9292
          volumeMounts:
            - mountPath: /glance-etc
              name: glance-etc
            - mountPath: /glance_store
              name: image-store
            - mountPath: /scripts
              name: glance-bin
        - name: registry
          image: "{{ default "hub.global.cloud.sap" .Values.global.imageRegistry }}/{{ .Values.registry.image }}:{{ .Values.registry.imageTag }}"
          imagePullPolicy: {{ .Values.registry.imagePullPolicy | default "IfNotPresent" | quote }}
          command:
            - /usr/local/bin/kubernetes-entrypoint
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 9191
          env:
            - name: COMMAND
              value: "bash /scripts/glance-registry-start"
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: DEPENDENCY_SERVICE
              value: "glance"
            - name: DEBUG_CONTAINER
              value: "false"
            {{- if .Values.sentry.enabled }}
            - name: SENTRY_DSN
              value: {{ .Values.sentry.dsn | quote}}
            {{- end }}
          {{- if .Values.registry.resources.enabled }}
          resources:
            limits:
              cpu: {{ .Values.registry.resources.limits.cpu | quote }}
              memory: {{ .Values.registry.resources.limits.memory | quote }}
            requests:
              cpu: {{ .Values.registry.resources.requests.cpu | quote }}
              memory: {{ .Values.registry.resources.requests.memory | quote }}
          {{- end }}
          ports:
            - name: registry
              containerPort: 9191
          volumeMounts:
            - mountPath: /glance-etc
              name: glance-etc
            - mountPath: /scripts
              name: glance-bin
        {{- if .Values.metrics.enabled }}
        - name: statsd
          image: "{{ .Values.metrics.image }}:{{ .Values.metrics.imageTag }}"
          imagePullPolicy: {{ .Values.metrics.imagePullPolicy | default "IfNotPresent" | quote }}
          ports:
            - name: statsd
              containerPort: 9125
              protocol: UDP
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
        {{- end }}
      volumes:
        - name: image-store
        {{- if .Values.file.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.store.file.persistence.existingClaim }}{{ .Values.store.file.persistence.existingClaim }}{{- else }}{{ .Release.Name }}-pvc{{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: glance-etc
          configMap:
            name: glance-etc
        - name: glance-bin
          configMap:
            name: glance-bin
