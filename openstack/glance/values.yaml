# Default values for glance.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  imageNamespace: monsoon
#  imageRegistry: DEFINED-IN-REGION-CHART
  dbUser: glance
  master_password: ""
  pgbouncer:
    enabled: true

# The registry is deprecated, setting imageVersionGlanceRegistry or imageVersion will enable the deployment (but not the setting)
# imageVersionGlance: null
# imageVersionGlanceApi: null
# imageVersionGlanceRegistry: null

stores: "swift,file"
default_store: swift

file:
  enabled: true
  persistence:
    enabled: true
    existingClaim: glance-pvclaim

swift:
  enabled: true
  username: glance
  userDomainName: Default
  projectName: master
  projectDomainName: ccadmin
  multi_tenant: true
  # store_large_object_size:

api_port_internal: '9292'

replicas: 1

upgrades:
  revisionHistory: 3
  podReplacementStrategy: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 3

api:
  debug: false
  resources:
    enabled: false
    limits:
      memory: 128Mi
      cpu: 500m
    requests:
      memory: 128Mi
      cpu: 500m

registry:
  debug: false
  resources:
    enabled: false
    limits:
      memory: 128Mi
      cpu: 500m
    requests:
      memory: 128Mi
      cpu: 500m

services:
  type: ClusterIP
#  externalip: "192.168.1.100"

keystone:
# specify the k8s keystone namespace if diffrent from glance
# namespace: keystone
# authUrl: http://identity.cluster.cloud.sap/v3
  identityApiVersion: 3
  username: glance
  password: secret
  userDomainId: default
# userDomainName: Default
  projectName: service
  projectDomainId: default
# projectDomainName: Default


metrics:
  enabled: true
  port: "9102"

sentry:
  enabled: true

tempest:
  imageTag: manila-0.0.2
  domain_id: null
  enabled: false
  expected_failures: {}

unittest:
  enabled: false

pgmetrics:
  name: glance
  customMetrics:
     openstack_glance_image:
       query: "SELECT id, name, status, size, owner, visibility, COUNT(*) AS gauge from images where deleted='false' GROUP BY id"
       metrics:
         - id:
             usage: "LABEL"
             description: "Image ID"
         - name:
             usage: "LABEL"
             description: "Image Name"
         - status:
             usage: "LABEL"
             description: "Image Status"
         - size:
             usage: "LABEL"
             description: "Image Size"
         - owner:
             usage: "LABEL"
             description: "Image Owner"
         - visibility:
             usage: "LABEL"
             description: "Image visibility"
         - gauge:
             usage: "GAUGE"
             description: "Image Count"

postgresql:
  imageTag: '9.4.14'
  postgresDatabase: glance
  dbUser: glance
  dbInit: glance-db-init
  dbMaintain: glance-db-maintain
  pgbouncer:
    enabled: true
  persistence:
    enabled: true
    existingClaim: db-glance-pvclaim
  backup:
    enabled: true
    metrics: true
    os_password: null
  resources:
    requests:
      cpu: "500m" # 1/2 cpu
      memory: "300Mi" # 140Mi high recorded

  shared_preload_libraries: pg_stat_statements
  track_activity_query_size: 2048

logging:
  formatters:
    context:
        class: oslo_log.formatters.ContextFormatter
    default:
        format: "%(message)s"
  handlers:
    stdout:
        class: StreamHandler
        args: "(sys.stdout,)"
        formatter: context
    "null":
        class: logging.NullHandler
        args: "()"
        formatter: default
    sentry:
        class: raven.handlers.logging.SentryHandler
        level: ERROR
        args: "()"
  loggers:
    root:
        handlers: "null"
        level: WARNING
    glance:
        handlers: stdout, sentry
        level: DEBUG
    glance_store:
        handlers: stdout, sentry
        level: DEBUG
    amqp:
        handlers: stdout, sentry
        level: WARNING
    amqplib:
        handlers: stdout, sentry
        level: WARNING
    boto:
        handlers: stdout, sentry
        level: WARNING
    eventlet.wsgi.server:
        handlers: stdout, sentry
        level: INFO
    sqlalchemy:
        handlers: stdout, sentry
        level: WARNING
    suds:
        handlers: stdout, sentry
        level: WARNING

vice_president: true

imageVersionGlanceNanny: null

nanny:
  enabled: False
  # debug mode - no script run in the containers, just a sleep loop
  debug: True
  # run the nanny every n minutes
  interval: 60
  db_purge:
    enabled: True
    # purge deleted db entries older than n days
    older_than: 14
    # delete at max number of entries in one run
    max_number: 50

# openstack-watcher-middleware
watcher:
  enabled: true
