kind: Deployment
apiVersion: apps/v1

metadata:
  name: keppel-api

spec:
  revisionHistoryLimit: 5
  replicas: {{ if .Values.keppel.slim }} 1 {{ else }} {{ .Values.keppel.replicas.api }} {{ end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  selector:
    matchLabels:
      name: keppel-api
  template:
    metadata:
      labels:
        name: keppel-api
      annotations:
        checksum/configmap: {{ include "keppel/templates/configmap.yaml" . | sha256sum }}
        checksum/secret: {{ include "keppel/templates/secret.yaml" . | sha256sum }}
    spec:
      volumes:
        - name: config
          configMap:
            name: keppel
      containers:
        - name: api
          image: {{include "keppel_image" .}}
          imagePullPolicy: IfNotPresent
          args: [ server, api ]
          env: {{ include "keppel_environment" $ | indent 12 }}
          volumeMounts:
            - mountPath: /etc/keppel
              name: config
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 80
            timeoutSeconds: 10
            periodSeconds: 60
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 80
            timeoutSeconds: 5
            periodSeconds: 5
          # NOTE: observed resource usage in eu-de-1 (as of 2020-12)
          # - CPU: 50m with 4 replicas was running into throttling, so give plenty headroom
          # - RAM: levels off around 50 Mi
          resources:
            requests:
              cpu: "150m"
              memory: "128Mi"
            limits:
              cpu: "150m"
              memory: "128Mi"
