{{- if .Values.prometheus.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-maia

data:
  ca.cert: |
{{ .Values.prometheus.ca | indent 4}}
  prometheus.yaml: |
    global:
      scrape_timeout: 55s

    scrape_configs:
    # loop over all vcenter exporters
    {{- range $config := .Values.vcenter_exporter.maia_vcenter_config }}
    - job_name: 'vcenter-{{ $config.name }}'
      static_configs:
        - targets: ['vcenter-exporter-{{ $config.name }}:9102']
      metric_relabel_configs:
        - regex: "instance|job|exported_job|exported_instance"
          action: labeldrop
        - source_labels: [vmware_name]
          regex: c_blackbox.*|c_regression.*
          action: drop
    {{- end }}

    # loop over all snmp exporters and exchange exporter and snmp device name, so that
    # the metric is labeled by snmp device name and not by exporter name
    {{- range $config := .Values.snmp_exporter.maia_snmp_config }}
    - job_name: 'snmp-{{ $config.name }}'
      static_configs:
        - targets:
          - {{ $config.target }} # SNMP device
      metrics_path: /snmp
      params:
        module: [{{ $config.configname }}]
      relabel_configs:
        - source_labels: [__address__]
          target_label: __param_target
        - source_labels: [__param_target]
          target_label: instance
        - target_label: __address__
          replacement: snmp-exporter-{{ $config.name }}:9116 # SNMP exporter
      metric_relabel_configs:
        - regex: "instance|job"
          action: labeldrop
        - source_labels: [ltmVirtualServStatName]
          target_label: project_id
          regex: /Project_(.*)/Project_.*
        - source_labels: [ltmVirtualServStatName]
          target_label: lb_id
          regex: /Project_.*/Project_(.*)
    {{- end }}

    # self-scrape the embedded prometheus (even when K8S API is down)
    - job_name: 'prometheus-maia'
      static_configs:
        - targets: ['localhost:{{ .Values.prometheus.listen_port }}']

    # expose tenant-specific metrics collected by kube-system monitoring
    - job_name: 'kube-system'
      static_configs:
        - targets: ['prometheus-collector.kube-monitoring:9090']
      metric_relabel_configs:
        - regex: "instance|job|kubernetes_namespace|kubernetes_pod_name|kubernetes_name|pod_template_hash|exported_instance|exported_job|type|name|component|system"
          action: labeldrop
      metrics_path: '/federate'
      params:
        'match[]':
          # import any tenant-specific metric, except for those which already have been imported
          - '{__name__!~"^snmp_.+|^vcenter_.+",project_id!="",vmware_name!~"c_blackbox.+|c_regression.+"}'
{{- end }}
