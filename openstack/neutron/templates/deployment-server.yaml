kind: Deployment
apiVersion: extensions/v1beta1

metadata:
  name: neutron-server
  labels:
    system: openstack
    type: api
    component: neutron
spec:
  replicas: {{ if not .Values.pod.debug.server }}{{ .Values.pod.replicas.server }}{{ else }} 1 {{ end }}
  revisionHistoryLimit: {{ .Values.pod.lifecycle.upgrades.deployments.revision_history }}
  strategy:
    type: {{ .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy }}
    {{ if eq .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_unavailable }}
      maxSurge: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_surge }}
    {{ end }}
  selector:
    matchLabels:
      name: neutron-server
  template:
    metadata:
      labels:
        name: neutron-server
{{ tuple . "neutron" "api" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
        configmap-etc-hash: {{ include (print $.Template.BasePath "/configmap-etc.yaml") . | sha256sum }}
        configmap-etc-region-hash: {{ include (print $.Template.BasePath "/configmap-etc-region.yaml") . | sha256sum }}
        configmap-bin-hash: {{ include (print $.Template.BasePath "/configmap-bin.yaml") . | sha256sum }}
    spec:
{{ tuple . "neutron" "api" | include "kubernetes_pod_anti_affinity" | indent 6 }}
      containers:
        - name: neutron-server
          image: {{ default "hub.global.cloud.sap" .Values.global.imageRegistry }}/{{.Values.image_name}}:{{.Values.image_tag}}
          imagePullPolicy: IfNotPresent
{{- if not .Values.pod.debug.server }}
          livenessProbe:
            httpGet:
              path: /
              port: {{.Values.global.neutron_api_port_internal | default 9696}}
            initialDelaySeconds: 120
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: {{.Values.global.neutron_api_port_internal | default 9696}}
            initialDelaySeconds: 15
            timeoutSeconds: 5
{{- end }}
          command:
            - /usr/local/bin/kubernetes-entrypoint
          env:
            - name: COMMAND
              value: "/container.init/neutron-server-start"
            - name: DEBUG_CONTAINER
            {{ if .Values.pod.debug.server }}
              value: "true"
            {{else}}
              value: "false"
            {{ end }}
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: DEPENDENCY_JOBS
              value: "neutron-migration"
            - name: DEPENDENCY_SERVICE
              value: "neutron-postgresql,{{ .Release.Name }}-rabbitmq"
            - name: STATSD_HOST
              value: "localhost"
            - name: STATSD_PORT
              value: "9125"
            - name: STATSD_PREFIX
              value: "openstack"
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: neutron.DSN.python
            - name: PGAPPNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: JAEGER_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          ports:
            - name: neutron-api{{- tuple .Values.api.override | include "utils.snippets.debug.debuggable_port" }}
              containerPort: {{.Values.global.neutron_api_port_internal | default 9696}}
          volumeMounts:
            - mountPath: /development
              name: development
            - mountPath: /neutron-etc
              name: neutron-etc
            - mountPath: /neutron-etc-vendor
              name: neutron-etc-vendor
            - mountPath: /neutron-etc-region
              name: neutron-etc-region
            - mountPath: /container.init
              name: container-init
        - name: statsd
          image: prom/statsd-exporter:v0.8.1
          imagePullPolicy: IfNotPresent
          args: [ --statsd.mapping-config=/etc/statsd/statsd-exporter.yaml ]
          ports:
            - name: statsd
              containerPort: 9125
              protocol: UDP
            - name: metrics
              containerPort: {{.Values.port_metrics}}
          volumeMounts:
            - name: neutron-etc
              mountPath: /etc/statsd/statsd-exporter.yaml
              subPath: statsd-exporter.yaml
              readOnly: true
{{- tuple . .Values.api.override "neutron-api" | include "utils.snippets.debug.debug_port_container" | indent 8 }}
      volumes:
        - name: neutron-etc
          configMap:
            name: neutron-etc
        - name: neutron-etc-vendor
          configMap:
            name: neutron-etc-vendor
        - name: neutron-etc-region
          configMap:
            name: neutron-etc-region
        - name: development
          persistentVolumeClaim:
            claimName: development-pvclaim
        - name: container-init
          configMap:
            name: neutron-bin
            defaultMode: 0755
{{- default 9696 .Values.global.neutron_api_port_internal | tuple . .Values.api.override "neutron-api" | include "utils.snippets.debug.debug_port_volumes_and_configmap" }}
