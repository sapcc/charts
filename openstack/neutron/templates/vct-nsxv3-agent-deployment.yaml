{{- if and (.Capabilities.APIVersions.Has "vcenter-operator.stable.sap.cc/v1") (contains ",nsxv3" .Values.ml2_mechanismdrivers) }}
apiVersion: vcenter-operator.stable.sap.cc/v1
kind: VCenterTemplate
metadata:
  name: 'neutron-nsxv3-agent-deployment'
  scope: 'cluster'
  jinja2_options:
    variable_start_string: '{='
    variable_end_string: '=}'
template: |
  {% if nsx_t_enabled is defined and nsx_t_enabled -%}
  apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    name: neutron-nsxv3-agent-{= name =}
    labels:
      system: openstack
      type: backend
      component: neutron
  spec:
    replicas: 1
    revisionHistoryLimit: 5
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 1
    selector:
      matchLabels:
          name: neutron-nsxv3-agent-{= name =}
    template:
      metadata:
        labels:
{{ tuple . "neutron" "nsxv3" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 10 }}
          name: neutron-nsxv3-agent-{= name =}
        annotations:
          configmap-etc-hash: {{ include (print $.Template.BasePath "/configmap-etc.yaml") . | sha256sum }}
          prometheus.io/scrape: "true"
          prometheus.io/port: "9191"
          prometheus.io/targets: {{ required ".Values.alerts.prometheus missing" .Values.alerts.prometheus | quote }}
      spec:
        containers:
        - name: neutron-nsxv3-agent
          image: {{ default "hub.global.cloud.sap" .Values.global.imageRegistry }}/monsoon/loci-neutron:{{.Values.imageVersionNSXv3 | default .Values.imageVersion | required "Please set neutron.imageVersion or similar"}}
          imagePullPolicy: IfNotPresent
          command: ["dumb-init"]
          args: ["neutron-nsxv3-agent", "--config-file", "/etc/neutron/neutron.conf", "--config-file", "/etc/neutron/plugins/ml2/ml2-conf.ini", "--config-file", "/etc/neutron/plugins/ml2/ml2-nsxv3.ini"]
          env:
          - name: SENTRY_DSN
            valueFrom:
              secretKeyRef:
                name: sentry
                key: neutron.DSN.python
          - name: PYTHONWARNINGS
            value: "ignore:Unverified HTTPS request"
          - name: PGAPPNAME
            value: neutron-nsxv3-agent-{= name =}
          - name: REQUESTS_CA_BUNDLE
            value: ""
          livenessProbe:
            exec:
              command: ["openstack-agent-liveness", "--component", "neutron", "--config-file", "/etc/neutron/neutron.conf", "--config-file", "/etc/neutron/plugins/ml2/ml2-nsxv3.ini", "--binary", "neutron-nsxv3-agent"]
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
          resources:
            requests:
              cpu: "64m"
              memory: "256Mi"
            limit:
              cpu: "128m"
              memory: "512Mi"
          volumeMounts:
          - mountPath: /etc/neutron
            name: etcneutron
          - mountPath: /etc/neutron/neutron.conf
            name: neutron-etc
            subPath: neutron.conf
            readOnly: true
          - mountPath: /etc/neutron/api-paste.ini
            name: neutron-etc
            subPath: api-paste.ini
            readOnly: true
          - mountPath: /etc/neutron/policy.json
            name: neutron-etc
            subPath: neutron-policy.json
            readOnly: true
          - mountPath: /etc/neutron/logging.conf
            name: neutron-etc
            subPath: logging.conf
            readOnly: true
          - mountPath: /etc/neutron/plugins/ml2/ml2-conf.ini
            name: neutron-etc
            subPath: ml2-conf.ini
            readOnly: true
          - mountPath: /etc/neutron/plugins/ml2/ml2-nsxv3.ini
            name: ml2-conf-nsxv3
            subPath: ml2-nsxv3.ini
            readOnly: true
        - name: exporter
          image: {{ default "hub.global.cloud.sap" .Values.global.imageRegistry }}/monsoon/nsx-t-exporter:latest
          env:
            {%- set bb = name | replace( "bb", "") | int %}
            {%- set hostname = "nsx-ctl-" + "bb" + ( '%03d' % bb ) + "." + domain %}
            - name: NSXV3_LOGIN_HOST
              value: {= hostname =}
            - name: NSXV3_LOGIN_PORT
              value: "443"
            - name: NSXV3_LOGIN_USER
              value: "admin"
            - name: NSXV3_LOGIN_PASSWORD
              value: {= username | derive_password(hostname) | quote =}
            - name: NSXV3_REQUESTS_PER_SECOND
              value: "10"
            - name: NSXV3_REQUEST_TIMEOUT_SECONDS
              value: "30"
            - name: NSXV3_SUPPRESS_SSL_WORNINGS
              value: "true"
            - name: SCRAP_PORT
              value: "9191"
        volumes:
        - name: etcneutron
          emptyDir: {}
        - name: neutron-etc
          configMap:
            name: neutron-etc
        - name: ml2-conf-nsxv3
          configMap:
            name: neutron-ml2-nsxv3-{= name =}
  {% endif %}
{{- end }}
