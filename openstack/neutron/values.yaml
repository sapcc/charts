# Default values for neutron.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value
network_agents: []
osprofiler: {}

global:
  dbUser: neutron
  dbPassword: DEFINED-IN-REGION-CHART
  imageRegistry:
  fernetRouter:
    image: "monsoon/fernet-router:latest"
  metadata_workers: 1

pod:
  replicas:
    server: 2
  lifecycle:
    upgrades:
      deployments:
        revision_history: 5
        pod_replacement_strategy: RollingUpdate
        rolling_update:
           max_unavailable: 0
           max_surge: 1
  debug:
    server: false
    dhcp_agent: false
    metadata_agent: false
    aci_agent: false
    asr_agent: false
    f5_agent: false
    cisco_ml2_ucsm_bm: false

agent:
  enable_daemonset: false
  disable_deployments: false
  image_tag: mitaka
  image_name: neutron


api:
  override: {}

debug: "True"

port_metrics: '9102'
l2_port_metrics: '9102'
l3_port_metrics: '9103'

image_tag: mitaka
image_name: neutron

service_plugins: neutron_lbaas.services.loadbalancer.plugin.LoadBalancerPluginv2,networking_cisco.plugins.cisco.service_plugins.cisco_device_manager_plugin.CiscoDeviceManagerPlugin,networking_cisco.plugins.cisco.service_plugins.cisco_router_plugin.CiscoRouterPlugin
default_router_type: ASR1k_router
router_scheduler_driver: neutron.scheduler.l3_agent_scheduler.LeastRoutersScheduler


aci:
  apic_hosts: DEFINED-IN-REGION-CHART
  apic_user: DEFINED-IN-REGION-CHART
  apic_password: DEFINED-IN-REGION-CHART
  apic_tenant_name: DEFINED-IN-REGION-CHART
  apic_application_profile: converged_cloud_openstack
  support_remote_mac_clear: 'True'
  
arista:
  api_type: nocvx
  sync_interval: 60
  conn_timeout: 30
  lossy_consolidation_limit: 50
  eapi_host: DEFINED-IN-REGION-CHART
  eapi_username: DEFINED-IN-REGION-CHART
  eapi_password: DEFINED-IN-REGION-CHART
  switches:
    - host: DEFINED-IN-REGION-CHART
      user: DEFINED-IN-REGION-CHART
      password: DEFINED-IN-REGION-CHART

asr:
  config_agents: []

f5:
  snat_per_subnet: 1
  loadbalancers:
    - name: DEFINED-IN-REGION-CHART
      username: DEFINED-IN-REGION-CHART
      password: DEFINED-IN-REGION-CHART
      guest_host: DEFINED-IN-REGION-CHART
      vcmp_host: DEFINED-IN-REGION-CHART
      external_physical_mappings: DEFINED-IN-REGION-CHART
      physical_network: DEFINED-IN-REGION-CHART

hypervisors_vmware: []

manila:
  physnet: ab123

cisco_ucsm_bm:
  example.com:
    user: DEFINED-IN-REGION-CHART
    password: DEFINED-IN-REGION-CHART
    physical_network: DEFINED-IN-REGION-CHART
    vnic_paths: DEFINED-IN-REGION-CHART


logging:
    formatters:
        context:
            class: oslo_log.formatters.ContextFormatter
        default:
            format: "%(message)s"
    handlers:
        stdout:
            class: StreamHandler
            args: "(sys.stdout,)"
            formatter: context
        "null":
            class: logging.NullHandler
            formatter: default
            args: "()"
        sentry:
            class: "raven.handlers.logging.SentryHandler"
            level: ERROR
            args: "()"
    loggers:
        root:
            handlers: stdout, sentry
            level: WARNING
        neutron:
            handlers: stdout, sentry
            level: WARNING
        neutron_lbaas:
            handlers: stdout, sentry
            level: WARNING
        suds:
            handlers: "null"
            level: ERROR
        eventlet.wsgi.server:
            handlers: stdout, sentry
            level: INFO
        auditmiddleware:
            handlers: stdout, sentry
            level: INFO

pgmetrics:
  name: neutron
  db_name: neutron
  customMetrics:
    openstack_neutron_networks_count:
      query: "SELECT COUNT(*) AS gauge, status FROM networks GROUP BY networks.status"
      metrics:
        - status:
            usage: "LABEL"
            description: "Network Status"
        - gauge:
            usage: "GAUGE"
            description: "Networks Count"
    openstack_neutron_routers_count:
      query: "SELECT COUNT(*) AS gauge, status FROM routers GROUP BY routers.status"
      metrics:
        - status:
            usage: "LABEL"
            description: "Router Status"
        - gauge:
            usage: "GAUGE"
            description: "Router Count"
    openstack_neutron_loadbalancer_count:
      query: "SELECT COUNT(*) AS gauge, operating_status FROM lbaas_loadbalancers GROUP BY lbaas_loadbalancers.operating_status"
      metrics:
        - operating_status:
            usage: "LABEL"
            description: "lbaas Status"
        - gauge:
            usage: "GAUGE"
            description: "lbaas Count"
    openstack_neutron_SAP_IP_status:
      query: "SELECT floatingips.floating_network_id, networks.name AS network_name, floatingips.status, COUNT(*) AS gauge FROM floatingips INNER JOIN networks ON floatingips.tenant_id=networks.tenant_id WHERE floating_ip_address LIKE '10%' GROUP BY floatingips.floating_network_id, floatingips.status, networks.name"
      metrics:
        - floating_network_id:
            usage: "LABEL"
            description: "Floating Network ID"
        - network_name:
            usage: "LABEL"
            description: "Network Name"
        - status:
            usage: "LABEL"
            description: "Floating IP Status per Network"
        - gauge:
            usage: "GAUGE"
            description: "Count of Floating IP by status"
    openstack_neutron_ext_IP_status:
      query: "SELECT floatingips.floating_network_id, networks.name AS network_name, floatingips.status, COUNT(*) AS gauge FROM floatingips INNER JOIN networks ON floatingips.tenant_id=networks.tenant_id WHERE floating_ip_address LIKE '15%' GROUP BY floatingips.floating_network_id, floatingips.status, networks.name"
      metrics:
        - floating_network_id:
            usage: "LABEL"
            description: "Floating Network ID"
        - network_name:
            usage: "LABEL"
            description: "Network Name"
        - status:
            usage: "LABEL"
            description: "Floating IP Status per Network"
        - gauge:
            usage: "GAUGE"
            description: "Count of Floating IP by status"
    openstack_neutron_SAP_IPused_per_subnet:
      query: "SELECT subnet_id, COUNT(*) AS gauge, network_id FROM ipallocations WHERE ip_address LIKE '10%' GROUP BY ipallocations.subnet_id, ipallocations.network_id"
      metrics:
        - subnet_id:
            usage: "LABEL"
            description: "SUBNET_ID details"
        - network_id:
            usage: "LABEL"
            description: "network_id details"
        - gauge:
            usage: "GAUGE"
            description: "SAP IPs used per subnet"
    openstack_neutron_ext_IPused_per_subnet:
      query: "SELECT subnet_id, COUNT(*) AS gauge, network_id FROM ipallocations WHERE ip_address LIKE '15%' GROUP BY ipallocations.subnet_id, ipallocations.network_id"
      metrics:
        - subnet_id:
            usage: "LABEL"
            description: "SUBNET_ID details"
        - network_id:
            usage: "LABEL"
            description: "network_id details"
        - gauge:
            usage: "GAUGE"
            description: "Internet IPs used per subnet"
    openstack_neutron_monitor_sec_grp:
     query: "select securitygroupportbindings.security_group_id AS security_group_id, count(*) as count from securitygroupportbindings join securitygrouprules on securitygroupportbindings.security_group_id = securitygrouprules.security_group_id group by securitygroupportbindings.security_group_id order by count desc limit 10"
     metrics:
        - security_group_id:
            usage: "LABEL"
            description: "security group id details"
        - count:
            usage: "GAUGE"
            description: "Estimate on number of filter rules"
    openstack_neutron_monitor_agents:
      query: "SELECT host, agent_type, EXTRACT(EPOCH FROM (now() - heartbeat_timestamp)) as heartbeat_seconds FROM agents WHERE admin_state_up"
      metrics:
      - host:
          usage: "LABEL"
          description: "Name of the agents host"
      - agent_type:
          usage: "LABEL"
          description: "Type of the agent"
      - heartbeat_seconds:
          usage: "GAUGE"
          description: "Seconds since the last heartbeat"

postgresql:
  postgresDatabase: neutron
  postgresUser: postgres
  postgresPassword: DEFINED-IN-REGION-CHART

  dbInit: neutron-db-init
  dbMaintain: neutron-db-maintain

  persistence:
    enabled: false

  backup:
    enabled: false
    image_version: v0.5.15

sentry:
  enabled: true

audit:
  enabled: false 
  # do by default not attach the request payloads of create/update calls to the event
  record_payloads: false
  metrics_enabled: true
  # how many messages to buffer before dumping to log (when rabbit is down or too slow)
  mem_queue_size: 1000

rabbitmq_notifications:
  name: neutron

secgroup_entanglement_exporter:
  image_tag: DEFINED_IN_VALUES_FILE
  release:   DEFINED_IN_VALUES_FILE # Neutron release in lower case, e.g. "queens"

# openstack-watcher-middleware
watcher:
  enabled: true
