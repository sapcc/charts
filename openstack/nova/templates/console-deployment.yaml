kind: Deployment
apiVersion: extensions/v1beta1

metadata:
  name: nova-console
  labels:
    system: openstack
    type: backend
    component: nova
spec:
  replicas: {{ .Values.pod.replicas.console }}
  revisionHistoryLimit: {{ .Values.pod.lifecycle.upgrades.deployments.revision_history }}
  strategy:
    type: {{ .Values.pod.lifecycle.upgrades.deployments.podReplacementStrategy }}
    {{ if eq .Values.pod.lifecycle.upgrades.deployments.podReplacementStrategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.pod.lifecycle.upgrades.deployments.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.pod.lifecycle.upgrades.deployments.rollingUpdate.maxSurge }}
    {{ end }}
  selector:
    matchLabels:
      name: nova-console
  template:
    metadata:
      labels:
        name: nova-console
{{ tuple . "nova" "console" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
        pod.beta.kubernetes.io/hostname: nova-console
        configmap-etc-hash: {{ include (print $.Template.BasePath "/etc-configmap.yaml") . | sha256sum }}
{{- if and (eq .Capabilities.KubeVersion.Major "1") (lt .Capabilities.KubeVersion.Minor "5") }}
        scheduler.alpha.kubernetes.io/affinity: >
            {{ tuple . "nova" "console" | include "kubernetes_pod_anti_affinity" }}
{{- end }}
    spec:
{{- if and (eq .Capabilities.KubeVersion.Major "1") (ge .Capabilities.KubeVersion.Minor "7") }}
{{ tuple . "nova" "console" | include "kubernetes_pod_anti_affinity" | indent 6 }}
{{- end }}
      hostname: nova-console
      volumes:
      - name: etcnova
        emptyDir: {}
      - name: nova-etc
        configMap:
          name: nova-etc
      containers:
        - name: nova-consoleauth
          image: {{.Values.global.imageRegistry}}/{{.Values.global.image_namespace}}/ubuntu-source-nova-consoleauth:{{.Values.imageVersionNovaConsoleauth | default .Values.imageVersion }}
          imagePullPolicy: IfNotPresent
          command:
            - dumb-init
            - kubernetes-entrypoint
          env:
            - name: COMMAND
              value: "nova-consoleauth"
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: DEPENDENCY_SERVICE
              value: "nova-api"
{{- if .Values.python_warnings}}
            - name: PYTHONWARNINGS
              value: {{ .Values.python_warnings | quote }}
{{- end }}
          volumeMounts:
            - name: etcnova
              mountPath: /etc/nova
            - name: nova-etc
              mountPath: /etc/nova/nova.conf
              subPath: nova.conf
              readOnly: true
            - name: nova-etc
              mountPath: /etc/nova/policy.json
              subPath: policy.json
              readOnly: true
            - name: nova-etc
              mountPath: /etc/nova/logging.ini
              subPath: logging.ini
              readOnly: true
        - name: nova-novncproxy
          image: {{.Values.global.imageRegistry}}/{{.Values.global.image_namespace}}/ubuntu-source-nova-novncproxy:{{.Values.imageVersionNovaNovncproxy | default .Values.imageVersion }}
          imagePullPolicy: IfNotPresent
          command:
            - dumb-init
            - kubernetes-entrypoint
          env:
            - name: COMMAND
              value: "nova-novncproxy"
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: DEPENDENCY_SERVICE
              value: "nova-api"
          ports:
            - name: novnc
              containerPort: {{ .Values.global.novaNovncPortInternal }}
          volumeMounts:
            - name: etcnova
              mountPath: /etc/nova
            - name: nova-etc
              mountPath: /etc/nova/nova.conf
              subPath: nova.conf
              readOnly: true
            - name: nova-etc
              mountPath: /etc/nova/logging.ini
              subPath: logging.ini
              readOnly: true
        - name: nova-spicehtml5proxy
          image: {{.Values.global.imageRegistry}}/{{.Values.global.image_namespace}}/ubuntu-source-nova-spicehtml5proxy:{{.Values.imageVersionNovaSpicehtml5proxy | default .Values.imageVersion   }}
          imagePullPolicy: IfNotPresent
          command:
            - dumb-init
            - kubernetes-entrypoint
          env:
            - name: COMMAND
              value: "nova-spicehtml5proxy"
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
          ports:
            - name: spicehtml5
              containerPort: 6082
          volumeMounts:
            - name: etcnova
              mountPath: /etc/nova
            - name: nova-etc
              mountPath: /etc/nova/nova.conf
              subPath: nova.conf
              readOnly: true
            - name: nova-etc
              mountPath: /etc/nova/logging.ini
              subPath: logging.ini
              readOnly: true
        - name: nova-serialproxy
          image: {{.Values.global.imageRegistry}}/{{.Values.global.image_namespace}}/ubuntu-source-nova-novncproxy:{{.Values.imageVersionNovaNovncproxy | default .Values.imageVersion   }}
          imagePullPolicy: IfNotPresent
          command:
            - dumb-init
            - kubernetes-entrypoint
          env:
            - name: COMMAND
              value: "nova-serialproxy"
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
          ports:
            - name: serial
              containerPort: 6083
          volumeMounts:
            - name: etcnova
              mountPath: /etc/nova
            - name: nova-etc
              mountPath: /etc/nova/nova.conf
              subPath: nova.conf
              readOnly: true
            - name: nova-etc
              mountPath: /etc/nova/logging.ini
              subPath: logging.ini
              readOnly: true
        {{- if .Values.global.hypervisors_ironic }}
        - name: nova-shellinaboxproxy
          image: {{.Values.global.imageRegistry}}/{{.Values.global.image_namespace}}/ubuntu-source-nova-shellinaboxproxy:{{.Values.imageVersion_nova_shellinabox | default .Values.imageVersion   }}
          imagePullPolicy: IfNotPresent
          stdin: true
          tty: true
          command:
            - dumb-init
            - kubernetes-entrypoint
          env:
            - name: LANG
              value: en_US.UTF-8
            - name: COMMAND
              value: "nova-shellinaboxproxy https://baremetal-console-3.{{ .Values.global.region }}.cloud.sap/"
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
          volumeMounts:
            - name: etcnova
              mountPath: /etc/nova
            - name: nova-etc
              mountPath: /etc/nova/nova.conf
              subPath: nova.conf
              readOnly: true
            - name: nova-etc
              mountPath: /etc/nova/logging.ini
              subPath: logging.ini
              readOnly: true
          ports:
            - name: shellinabox
              protocol: TCP
              containerPort: {{ .Values.global.novaShellinaboxPortInternal }}
        {{- end }}
