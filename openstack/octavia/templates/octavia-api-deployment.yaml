apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: octavia-api
  labels:
    app.kubernetes.io/name: octavia-api
    helm.sh/chart: {{ include "octavia.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: octavia-api
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: octavia-api
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        configmap-etc-hash: {{ include (print $.Template.BasePath "/octavia-etc-configmap.yaml") . | sha256sum }}
    spec:
      containers:
        - name: {{ .Chart.Name }}-api
          image: {{required ".Values.global.imageRegistry is missing" .Values.global.imageRegistry}}/{{.Values.global.imageNamespace}}/loci-octavia:{{required "Values.imageVersion is missing" .Values.imageVersion}}
          imagePullPolicy: IfNotPresent
          command: ["/var/lib/openstack/bin/octavia-api"]
          ports:
            - name: http
              containerPort: {{.Values.api_port_internal}}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
            - name: octavia-etc
              mountPath: /etc/octavia/octavia.conf
              subPath: octavia.conf
              readOnly: true
            - name: octavia-etc
              mountPath: /etc/octavia/policy.json
              subPath: policy.json
              readOnly: true
      volumes:
        - name: octavia-etc
          configMap:
            name: octavia-etc
