{{- if .Values.daemonsets }}
kind: DaemonSet
apiVersion: extensions/v1beta1

metadata:
  name: swift-rsyncd
  namespace: swift
  labels:
    release: "{{.Release.Name}}"
    on-upgrade: recreate

spec:
  template:
    metadata:
      labels:
        component: swift-rsyncd
        from: daemonset
        restart: directly
      annotations:
        {{- include "swift_daemonset_annotations" . | indent 8 }}
        {{- include "swift_conf_annotations" . | indent 8 }}
    spec:
      hostNetwork: true
      nodeSelector:
        species: swift-storage
      volumes:
        - name: swift-bin
          configMap:
            name: swift-bin
        - name: swift-etc
          configMap:
            name: swift-etc
        - name: swift-drives
          hostPath:
            path: /srv/node
        - name: swift-drive-state
          hostPath:
            path: /run/swift-storage/state
      containers:
        - name: server
          image: {{.Values.global.docker_repo}}/ubuntu-source-swift-rsyncd-m3:{{.Values.image_version_swift_rsyncd}}
          command:
            - /usr/bin/dumb-init
          args:
            - /bin/bash
            - /swift-bin/rsyncd-start
          # privileged access required for /swift-bin/unmount-helper (TODO: use shared/slave mount namespace instead)
          securityContext:
            privileged: true
          env:
            - name: DEBUG_CONTAINER
              value: "false"
            - name: RSYNC_COMPAT
              value: {{ default "false" .Values.rsync_compat | quote }}
          volumeMounts:
            - mountPath: /swift-bin
              name: swift-bin
            - mountPath: /swift-etc
              name: swift-etc
            - mountPath: /srv/node
              name: swift-drives
            - mountPath: /swift-drive-state
              name: swift-drive-state
{{- end }}
