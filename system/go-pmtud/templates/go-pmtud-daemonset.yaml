apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    k8s-app: pmtud
  name: pmtud
spec:
  selector:
    matchLabels:
      name: pmtud
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: pmtud
        k8s-app: pmtud
      annotations:
        configmap-pmtud-hash: {{ include (print $.Template.BasePath "/go-pmtud-configmap.yaml") $ | sha256sum }}
    spec:
      initContainers:
        - name: iptables-init
          image: "{{ .Values.images.iptables.repository }}:{{ .Values.images.iptables.tag }}"
          command:
            - /scripts/pmtud/iptables-init.sh
          securityContext:
            privileged: true
          volumeMounts:
            - name: pmtud
              mountPath: /scripts/pmtud
      containers:
      - name: pmtud
        image: "{{ .Values.images.pmtud.repository }}:{{ .Values.images.pmtud.tag }}"
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              # make sure to update _iptables_init.tpl template script to keep commands aligned
              command: ["/bin/sh", "-c", "iptables -t raw -D PREROUTING -i {{ .Values.pmtud.interface }} ! -s {{ .Values.iptables.ignoreSourceNetwork }} -p icmp -m icmp --icmp-type 3/4 --j NFLOG --nflog-group {{ .Values.iptables.nflogGroup }}"]
        command:
          - /go-pmtud
          - --peers={{ required ".Values.pmtud.peers is required" .Values.pmtud.peers }}
          - --iface={{ required ".Values.pmtud.interface is required" .Values.pmtud.interface }}
          - --nodename=$(NODE_NAME)
          - --ttl={{ .Values.pmtud.ttl }}
          - --nflog-group={{ .Values.iptables.nflogGroup }}
          - --metrics-port={{ .Values.pmtud.metricsPort }}
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        securityContext:
           privileged: true
      hostNetwork: true
      nodeSelector:
        beta.kubernetes.io/os: linux
        kubernetes.cloud.sap/provisioned-by: kubernikus
      terminationGracePeriodSeconds: 5
      tolerations:
        - operator: "Exists"
      volumes:
        - name: pmtud
          configMap:
            name: pmtud
            defaultMode: 0744
