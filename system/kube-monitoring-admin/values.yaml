global:
  region:
  domain:
  clusterType: admin

# Enables scraping configuration for static apiserver, etcd, scheduler, controller-manager pods.
isStaticPodsScrapeConfig: true

# Metric whitelist.
allowedMetrics:
  # Full list of cAdvisor metrics: https://github.com/google/cadvisor/blob/master/docs/storage/prometheus.md .
  cAdvisor:
    - container_cpu_cfs_periods_total
    - container_cpu_cfs_throttled_seconds_total
    - container_cpu_cfs_throttled_periods_total
    - container_cpu_usage_seconds_total
    - container_cpu_user_seconds_total
    - container_cpu_system_seconds_total
    - container_fs_inodes_total
    - container_fs_limit_bytes
    - container_fs_usage_bytes
    - container_last_seen
    - container_memory_usage_bytes
    - container_memory_working_set_bytes
    - container_network_receive_bytes_total
    - container_network_transmit_bytes_total
    - container_start_time_seconds

  # Full list of kubelet metrics: https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/metrics/metrics.go#L33 .
  kubelet:
    - kubelet_pod_start_latency_microseconds
    - kubelet_running_pod_count
    - process_max_fds
    - process_open_fds

  # Full list of APIserver metrics: https://github.com/kubernetes/apiserver/blob/master/pkg/endpoints/metrics/metrics.go .
  kubeAPIServer:
    - apiserver_request_count
    - apiserver_request_latencies_bucket
    - etcd_object_counts
    - process_max_fds
    - process_open_fds

# Values for operated Prometheus collector.
prometheus-collector:
  name: collector-kubernetes

  retentionTime: 1h

  additionalScrapeConfigs:
    name: k8s-collector-additional-scrape-config
    key: scrape-config.yaml

  ingress:
    enabled: true
    hosts:
      - prometheus-collector-kubernetes
      - prometheus-collector

  # Store in memory.
  persistence:
    enabled: false

  serviceAccount:
    create: false
    name: default

  # Discover targets with `prometheus.io/targets=kubernetes` annotation as well.
  serviceDiscoveries:
    additionalTargets:
      - kubernetes
    pods:
      enabled: false
    kubeAPIServer:
      enabled: false
    cAdvisor:
      enabled: false
    kubelet:
      enabled: false
    nodeExporter:
      enabled: true
    kubeDNS:
      enabled: false

absent-metrics-operator:
  # Enabled on a per region basis in the respective secrets.git values file.
  enabled: false

# Values for Prometheus frontend.
prometheus-frontend:
  name: kubernetes

  rbac:
    create: false

  retentionTime: 14d

  additionalScrapeConfigs:
    name: k8s-frontend-additional-scrape-config
    key: scrape-config.yaml

  ingress:
    enabled: true
    hosts:
      - prometheus-kubernetes
      - prometheus

  # Store in memory.
  persistence:
    enabled: true
    size: 300Gi

  serviceAccount:
    create: false
    name: default

  # No service discoveries. Only federate from collector Prometheus.
  serviceDiscoveries:
    endpoints:
      enabled: false
    pods:
      enabled: false
    kubeAPIServer:
      enabled: false
    cAdvisor:
      enabled: false
    kubelet:
      enabled: false
    nodeExporter:
      enabled: false
    kubeDNS:
      enabled: false

  # Send alerts to these alertmanagers.
  alertmanagers:
    # Enabled via secrets.
    authentication:
      enabled: false

    hosts:
      - alertmanager.scaleout.eu-de-1.cloud.sap
      - alertmanager.scaleout.eu-nl-1.cloud.sap

# Deploy basic set of Prometheus alert and aggregation rules for monitoring Kubernetes.
prometheus-kubernetes-rules:
  prometheusName: kubernetes
  prometheusCollectorName: collector-kubernetes
  tier: k8s

prometheus-node-exporter:
  image:
    repository: prom/node-exporter

  serviceAccount:
    create: false
    name: default

  rbac:
    create: false

  extraArgs:
    - --collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)
    - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|bpf|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tmpfs|tracefs)$$
    - --collector.processes
    - --path.rootfs=/rootfs
    - --collector.systemd.enable-task-metrics
    - --collector.systemd.enable-restarts-metrics
    - --collector.systemd.enable-start-time-metrics

  extraHostVolumeMounts:
    - name: dbus
      hostPath: /var/run/dbus/system_bus_socket
      mountPath: /var/run/dbus/system_bus_socket
      readOnly: true
    - name: rootfs
      hostPath: /
      mountPath: /rootfs
      readOnly: true
      mountPropagation: HostToContainer

  resources:
    requests:
      memory: 100Mi
      cpu: 100m

kube-state-metrics:
  image:
    repository: sapcc/kube-state-metrics
    # Newer versions of kube-state-metrics use k8s.io/api/apps/v1 for DaemonSet, Deployment and StatefulSet.
    # Thus we need to stick with v1.5.0 until our k8s clusters were updated.
    tag: v1.5.0

  rbac:
    create: false

  customLabels:
    app: kube-state-metrics

  prometheusScrape: false

  collectors:
    # Not useful.
    configmaps: false
    secrets: false
    cronjobs: false
    horizontalpodautoscalers: false
    certificatesigningrequests: false
    ingresses: false

  resources:
    requests:
      memory: 150Mi
      cpu: 100m

kube-state-metrics-exporter:
  prometheusName: collector-kubernetes
