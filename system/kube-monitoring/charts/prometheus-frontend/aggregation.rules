groups:
- name: prometheus
  rules:
  - record: prometheus_local_storage_ingested_samples_total_rate
    expr: rate(prometheus_local_storage_ingested_samples_total[5m])

- name: swift
  rules:
  - record: swift_cluster_storage_used_percent_average
    expr: avg(swift_cluster_prostorage_used_percent_gauge_average < inf)

- name: compute
  rules:
  - record: openstack_compute_instances_total
    expr: sum(openstack_compute_instances_gauge) by (flavor_name,vm_state)

- name: skydns
  rules:
  - record: skydns_skydns_dns_error_count_total_irate
    expr: irate(skydns_skydns_dns_error_count_total[5m])

- name: etcd
  rules:
  - record: instance:fd_utilization
    expr: process_open_fds{component="etcd"} / process_max_fds{component="etcd"}

# consolidated resource consumption metrics for submission to prometheus-global:
# max() flattens the metrics from different generations of Limes pods into one series,
# so that any subsequent sum() does not double-count
- name: limes
  rules:
  - record: limes_consolidated_cluster_capacity
    expr: max(label_join(limes_cluster_capacity, "full_resource", "/", "service", "resource"))
          by (full_resource,os_cluster)

  - record: limes_consolidated_domain_quota
    expr: max(label_join(limes_domain_quota, "full_resource", "/", "service", "resource"))
          by (full_resource,os_cluster,domain)

  - record: limes_consolidated_domain_usage
    expr: sum(max(label_join(limes_project_usage, "full_resource", "/", "service", "resource"))
          by (full_resource,os_cluster,domain,project)) by (full_resource,os_cluster,domain)

  - record: limes_consolidated_unit_multiplier
    expr: max(label_join(limes_unit_multiplier, "full_resource", "/", "service", "resource"))
          by (full_resource)
