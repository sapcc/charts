groups:
- name: controlplane.alerts
  rules:     
  - alert: KubernetesCPMetricsDown
    expr: count(ipmi_up{job="cp/netbox"} == 0) by (server_name, serial) or count(up{job="cp/netbox"} == 0) by (server_name, serial)
    for: 15m
    labels:
      severity: warning
      tier: k8s
      service: controlplane
      context: "{{ $labels.server_name }}"
      meta: "ipmi metrics cannot be fetched from node {{ $labels.server_name }} / Serial: {{ $labels.serial }}"
    annotations:
      description: "ipmi metrics cannot be fetched from node {{ $labels.server_name }} / Serial: {{ $labels.serial }}"
      summary: "ipmi metrics cannot be fetched from node {{ $labels.server_name }} / Serial: {{ $labels.serial }}"
      
  - alert: KubernetesCPSDDown
    expr: (absent(ipmi_netbox_sd_up) or ipmi_netbox_sd_up == 0) and sum(kube_node_info{region!="admin"}) > 0
    for: 15m
    labels:
      severity: info
      tier: k8s
      service: controlplane
      context: netbox_sd
      meta: "ipmi service discovery failure"
    annotations:
      description: "ipmi service discovery failed to get netbox nodes"
      summary: "ipmi service discovery failed to get netbox nodes"

  - alert: KubernetesCPMissingIPMISensorData
    expr: (sum(label_replace(kube_node_info{region!="admin|staging"}, "node_name", "$1", "node", "(.*)")) by (node_name) unless ON (node_name) sum(ipmi_sensor_state{job="cp/netbox", node_name!=""}) by (node_name)) == 1
    for: 15m
    labels:
      severity: warning
      tier: k8s
      service: controlplane
      context: "{{ $labels.server_name }}"
      meta: "control plane node {{ $labels.node_name }} has no IPMI sensor data available. please ensure that the node is configured in netbox"
    annotations:
      description: "control plane node {{ $labels.node_name }} has no IPMI sensor data available. please ensure that the node is configured in netbox"
      summary: "control plane node {{ $labels.node_name }} has no IPMI sensor data. please ensure that the node is configured in netbox"
