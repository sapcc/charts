apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
      annotations:
{{- if .Values.tlsCertificate }}
        checksum/secrets: {{ include (print .Template.BasePath "/secrets.yaml") . | sha256sum }}
{{- end }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
          - sh
          - -exc
          - |
{{- if .Values.remoteIP }}
            echo -e "\n{{ .Values.remoteIP }} {{.Values.remoteURL | trimPrefix "https://" | trimPrefix "http://"}}" >> /etc/hosts
{{- end }}
            cp /conf/tls.crt /tmp/tls.crt.livenesspobe
            exec /entrypoint.sh /etc/docker/registry/config.yml
        env:
          - name: REGISTRY_PROXY_REMOTEURL
            value: {{ .Values.remoteURL }}
{{- if or .Values.tlsHostname .Values.tlsCertificate }}
          - name: REGISTRY_HTTP_TLS_CERTIFICATE
            value: /conf/tls.crt
          - name: REGISTRY_HTTP_TLS_KEY
            value: /conf/tls.key
{{- end }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        livenessProbe:
          exec:
            command:
              - sh
              - -c
              - cmp -s /conf/tls.crt /tmp/tls.crt.livenesspobe
          initialDelaySeconds: 60
          periodSeconds: 60
        readinessProbe:
          httpGet:
            path: /
            scheme: {{ if or .Values.tlsHostname .Values.tlsCertificate }}HTTPS{{ else }}HTTP{{ end }}
            port: {{ .Values.service.internalPort }}
        volumeMounts:
        - name: data
          mountPath: /var/lib/registry
{{- if or .Values.tlsHostname .Values.tlsCertificate }}
        - name: secrets
          mountPath: /conf
{{- end }}
      volumes:
{{- if or .Values.tlsHostname .Values.tlsCertificate }}
        - name: secrets
          secret:
            secretName: {{ template "fullname" . }}
{{- end }}
        - name: data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ template "fullname" . }}
        {{- else }}
          emptyDir: {}
        {{- end -}}
