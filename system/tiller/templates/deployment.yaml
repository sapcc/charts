{{- if .Capabilities.APIVersions.Has "apps/v1" }}
apiVersion: apps/v1
{{- else }}
apiVersion: extensions/v1beta1
{{- end }}
kind: Deployment
metadata:
  name: tiller-deploy
  {{- if hasKey .Values "namespace" }}
  namespace: {{ .Values.namespace }}
  {{- end }}
  labels:
    app: helm
    name: tiller
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: helm
      name: tiller
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: helm
        name: tiller
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    spec:
      serviceAccountName: tiller
      containers:
        - name: tiller
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: TILLER_NAMESPACE
            {{- if hasKey .Values "namespace" }}
            value: {{ .Values.namespace }}
            {{- else }}
            value: {{ .Release.Namespace }}
            {{- end }}
          - name: TILLER_HISTORY_MAX
            value: {{ quote .Values.maxHistory }}
          {{- if .Values.tls.enabled }}
          - name: TILLER_TLS_ENABLE
            value: "1"
          {{- if .Values.tls.verify }}
          - name: TILLER_TLS_VERIFY
            value: "1"
          {{- end }}
          - name: TILLER_TLS_CERTS
            value: /etc/certs
          {{- end }}
          {{- if .Values.onlyListenOnLocalhost }}
          command:
            - "/tiller"
          {{- if .Values.storage }}
            - --storage={{ .Values.storage }}
          {{- end }}
          args: ["--listen=127.0.0.1:44134"]
          {{- else }}
          ports:
          - containerPort: 44134
            name: tiller
            protocol: TCP
          - containerPort: 44135
            name: http
            protocol: TCP
          {{- end }}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /liveness
              port: 44135
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: 44135
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
          {{- if .Values.tls.enabled }}
          - mountPath: /etc/certs
            name: tiller-certs
            readOnly: true
          {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
      {{- if .Values.tls.enabled }}
      - name: tiller-certs
        secret:
          defaultMode: 0644
          secretName: {{ .Values.tls.secretName }}
      {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}